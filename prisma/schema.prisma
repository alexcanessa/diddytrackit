datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Person {
  id             Int              @id @default(autoincrement())
  name           String
  involvementType String
  details        String
  imageUrl       String?
  createdAt      DateTime         @default(now())
}

model Artist {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  mbid      String?   @unique // MusicBrainz ID (optional)
  imageUrl  String?
  reason    String?   // Why the artist is on the blacklist
  labels    Label[]   @relation("ArtistLabels") // One-to-many relationship
  bands     Band[]    @relation("ArtistBands") // Many-to-many relationship
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Label {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  mbid      String?   @unique // MusicBrainz ID (optional)
  artist    Artist?   @relation("ArtistLabels", fields: [artistId], references: [id])
  artistId  Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Band {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  mbid      String?   @unique // MusicBrainz ID (optional)
  artists   Artist[]  @relation("ArtistBands") // Many-to-many relationship
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Score {
  id        Int       @id @default(autoincrement())
  type      String?    // Role type (e.g., "artist", "label", "band")
  value     Int       // Score associated with this type
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
